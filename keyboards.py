# -*- coding: utf-8 -*-
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from config import TARGET_CHAT_ID, BACKUP_CHAT_ID, PREVIEW_CHAT_ID
from publisher import ACTIVE_BACKUP

def kb_main() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("üìã Listar", callback_data="m:list"),
             InlineKeyboardButton("üì¶ Enviar", callback_data="m:send")],
            [InlineKeyboardButton("üß™ Preview", callback_data="m:preview"),
             InlineKeyboardButton("‚è∞ Programar", callback_data="m:sched")],
            [InlineKeyboardButton("‚öôÔ∏è Ajustes", callback_data="m:settings")]
        ]
    )

def text_main() -> str:
    return (
        "üõ†Ô∏è Comandos:\n"
        "‚Ä¢ /listar ‚Äî muestra borradores pendientes (excluye los programados)\n"
        "‚Ä¢ /cancelar <id> ‚Äî o responde con /cancelar (quita de la cola sin borrar del canal)\n"
        "‚Ä¢ /deshacer [id] ‚Äî revierte un /cancelar (o responde)\n"
        "‚Ä¢ /eliminar <id> ‚Äî o responde (BORRA del canal y de la cola)  [alias: /del, /delete, /remove, /borrar]\n"
        "‚Ä¢ /nuke all|todos | /nuke 1,3,5 | /nuke 1-10 | /nuke N(√∫ltimos)\n"
        "‚Ä¢ /enviar ‚Äî publica ahora a targets activos (los programados NO se mezclan)\n"
        "‚Ä¢ /preview ‚Äî manda la cola a PREVIEW sin marcar como enviada\n"
        "‚Ä¢ /programar YYYY-MM-DD HH:MM ‚Äî programa lo que est√° en /listar (formato 24h, sin AM/PM)\n"
        "‚Ä¢ /programados ‚Äî muestra programaciones pendientes y cu√°nto falta\n"
        "‚Ä¢ /desprogramar <id|all> ‚Äî cancela por id o todas\n"
        "‚Ä¢ /id [id] ‚Äî info del mensaje o, si respondes, te dice el ID\n"
        "‚Ä¢ /canales ‚Äî IDs + estado de targets (alias: /targets, /where)\n"
        "‚Ä¢ /backup on|off ‚Äî alterna SOLO el backup (principal siempre ON)\n\n"
        "Pulsa un bot√≥n o usa /comandos para volver a ver este panel."
    )

def kb_settings() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("üîÄ Backup ON/OFF", callback_data="m:toggle_backup")],
            [InlineKeyboardButton("‚¨ÖÔ∏è Volver", callback_data="m:back")]
        ]
    )

def text_settings() -> str:
    onoff = "ON" if ACTIVE_BACKUP else "OFF"
    return (
        f"üì° **Targets**\n"
        f"‚Ä¢ Principal: `{TARGET_CHAT_ID}` **ON** (fijo)\n"
        f"‚Ä¢ Backup   : `{BACKUP_CHAT_ID}` **{onoff}**\n"
        f"‚Ä¢ Preview  : `{PREVIEW_CHAT_ID}`\n\n"
        "Usa el bot√≥n para alternar backup.\n"
        "‚¨ÖÔ∏è *Volver* regresa al men√∫ principal."
    )

def kb_schedule() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        [
            [InlineKeyboardButton("‚è≥ +5 min", callback_data="s:+5"),
             InlineKeyboardButton("‚è≥ +15 min", callback_data="s:+15")],
            [InlineKeyboardButton("üïó Hoy 20:00", callback_data="s:today20"),
             InlineKeyboardButton("üåÖ Ma√±ana 07:00", callback_data="s:tom07")],
            [InlineKeyboardButton("üóí Ver programados", callback_data="s:list"),
             InlineKeyboardButton("‚ùå Cancelar todos", callback_data="s:clear")],
            [InlineKeyboardButton("‚úçÔ∏è Custom", callback_data="s:custom"),
             InlineKeyboardButton("‚¨ÖÔ∏è Volver", callback_data="m:back")]
        ]
    )

def text_schedule() -> str:
    return (
        "‚è∞ Programar env√≠o de **los borradores actuales**.\n"
        "Elige un atajo o usa `/programar YYYY-MM-DD HH:MM` (formato 24h: 00:00‚Äì23:59, sin '(24h)' ni AM/PM).\n"
        "‚ö†Ô∏è Si no hay borradores, no se programa nada."
    )
